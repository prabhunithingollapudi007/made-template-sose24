composite blocktype TextFileExtractor {
    property url oftype text;

    input inputName oftype None;
    output outputName oftype File;

    block FileExtractor oftype HttpExtractor { url: url; }

    block FileTextInterpreter oftype TextFileInterpreter {}

    inputName
        ->FileExtractor
        ->FileTextInterpreter
        ->outputName;
}

composite blocktype CSVExtractor {
    property url oftype text;
    property delimiter oftype text: ',';
    property enclosing oftype text: '';
    property enclosingEscape oftype text: '';

    input inputName oftype None;
    output outputName oftype Sheet;

    block TextFileExtractor oftype TextFileExtractor { url: url; }

    block FileCSVInterpreter oftype CSVInterpreter {
        delimiter: delimiter;
        enclosing: enclosing;
        enclosingEscape: enclosingEscape;
    }

    inputName
        ->TextFileExtractor
        ->FileCSVInterpreter
        ->outputName;
}


// copied the boiler plate from exercise 2

pipeline GoodsPipeline {
    GoodsCSVExtractor -> HeaderFooterDeleter -> ColumnDeleter -> GoodsTableInterpreter -> GoodsLoader;

    block GoodsCSVExtractor oftype CSVExtractor {
        url: 'https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv';
        delimiter: ';';
    }

    // remove the unwanted rows headers and footers

    block HeaderFooterDeleter oftype RowDeleter {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 8, row 41337, row 41338, row 41339];
    }

    // remove the unwanted columns

    block ColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I, column J, column K, column L, column M, column N, column O, column P, column Q, column R, column S, column T, column U, column V, column W, column X, column Y, column Z, column AA, column AB, column AC, column AD, column AE, column AF, column AG, column AH, column AI, column AJ, column AK, column AL, column AM, column AN, column AO, column AP, column AQ, column AR, column AS];
    }

    block GoodsTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "year" oftype PositiveValueType, 
            "month" oftype text, 
            "goods_id" oftype text, 
            "goods_name" oftype text, 
            "goods_source" oftype text, 
            "abroad" oftype PositiveValueType, 
            "total" oftype PositiveValueType, 
        ];
    }


    block GoodsLoader oftype SQLiteLoader {
        table: 'goods';
        file: 'goodsTransportedByTrain.sqlite';
    }
}

valuetype PositiveValueType oftype integer {
    constraints : [ PositiveValueConstraint ];
}

valuetype GermanMonthType oftype text {
    constraints: [GermanMonthConstraint];
}

constraint PositiveValueConstraint on integer :
    value >= 0;

constraint GermanMonthConstraint on text:
    value in ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'];